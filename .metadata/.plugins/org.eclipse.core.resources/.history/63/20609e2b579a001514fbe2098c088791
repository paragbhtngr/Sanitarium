package entities.creatures;

import java.awt.Graphics;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

import game.Game;

public class Player extends Creature{
	
	private Game game;
	private String name, gender;
	private int age;
	private int XP = 0;
	private int level = 1;
	private int attack, mana, maxHealth;
	private int potions = 3;
	
	
	public Player(Game game, int x, int y) {
		super(x, y);
		this.game = game;
	}
	
	public void setName(String name) { this.name = name; }
	public void setGender (String gender) {this.gender = gender; }
	public void setAge (int age) {this.age = age; }
	public void setMaxHealth(int x){ this.maxHealth = x; }
	public void setHealth(int x){ super.health = x; }
	public void setAttack(int x){ this.attack = x; }
	public void setMana(int x){ this.attack = x; }
	public void addPotion(){ this.potions++; }
	public void setPotion(int p){ this.potions = p; }
	public void setLevel(int l) { this.level = l; };
	public void setXP(int xp) { this.XP = xp; }
	public void addXP(int xp) {
		this.XP += xp;
		if(this.XP >= 100*this.level){
			this.XP -= 100*this.level;
			level++;
			this.maxHealth += 10;
			this.health = this.maxHealth;
			this.attack += 10;
			this.mana += 10;
		}
	}
	
	public int getMaxHealth(){ return maxHealth; }
	public int getHealth(){ return super.health; }
	public int getAttack(){ return this.attack; }
	public int getMana(){ return this.attack; }
	public int getPotions() { return this.potions; }
	public int getLevel() { return this.level; }
	public int getXP() { return this.XP; }
	public String getName () { return this.name; }
	public String getGender () {return this.gender; }
	public int getAge () {return this.age; }

	public void setPlayerInfo(String path) {
		try {
            // FileReader reads text files in the default encoding.
            FileReader fileReader = new FileReader(path);
            BufferedReader bufferedReader = new BufferedReader(fileReader);
            
            name = bufferedReader.readLine();
            gender = bufferedReader.readLine();
            age = Integer.parseInt(bufferedReader.readLine());
            maxHealth = Integer.parseInt(bufferedReader.readLine());
            health = maxHealth;
            attack = Integer.parseInt(bufferedReader.readLine());
            mana = Integer.parseInt(bufferedReader.readLine());
            
            System.out.println(name);
            System.out.println(health);

            // Always close files.
            bufferedReader.close();         
        }
        catch(FileNotFoundException ex) {
            System.out.println(
                "Unable to open file '" + 
                path + "'");                
        }
        catch(IOException ex) {
            System.out.println(
                "Error reading file '" 
                + path + "'");                  
        }
	}

	@Override
	public void tick() {
		if(game.getKeyManager().up){ pMoveUp();}
		if(game.getKeyManager().down){ pMoveDown();}
		if(game.getKeyManager().left){ pMoveLeft();}
		if(game.getKeyManager().right){ pMoveRight();}
		if(game.getKeyManager().usePotion){ pUsePotion();}
		
	}

	private void pUsePotion() {
		if(this.potions > 0){
			this.potions--;
			this.health += this.mana*0.5;
		}
	}

	private void pMoveRight() {
		if(game.map[(int) y][(int) (x+0.5)] != '#'){
			x = x + 0.5;	
		}
	}

	private void pMoveLeft() {
		if(game.map[(int) y][(int) (x-0.5)] != '#'){
			x = x - 0.5;	
		}
	}

	private void pMoveDown() {
		if(game.map[(int) (y+0.3)][(int) (x)] != '#'){
			y = y + 0.3;	
		}
	}

	private void pMoveUp() {
		if(game.map[(int) (y-0.3)][(int) (x)] != '#'){
			y = y - 0.3;	
		}
	}


}
