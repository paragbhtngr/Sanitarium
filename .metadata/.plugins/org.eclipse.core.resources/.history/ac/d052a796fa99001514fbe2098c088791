package entities.creatures;

import java.awt.Graphics;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

import game.Game;

public class Player extends Creature{
	
	private Game game;
	private String name, gender;
	private int age;
	private int attack, mana, maxHealth;
	private int potions = 0;
	
	
	public Player(Game game, int x, int y) {
		super(x, y);
		this.game = game;
	}
	
	public void setMaxHealth(int x){ this.maxHealth = x; }
	public void setHealth(int x){ super.health = x; }
	public void setAttack(int x){ this.attack = x; }
	public void setMana(int x){ this.attack = x; }
	public void addPotion(){ this.potions++; }
	
	public int getMaxHealth(){ return maxHealth; }
	public int getHealth(){ return super.health; }
	public int getAttack(){ return this.attack; }
	public int getMana(){ return this.attack; }
	public int getPotions() { return this.potions; }
	public String getName () { return this.name; }
	public String getGender () {return this.gender; }
	public int getAge () {return this.age; }

	public void setPlayerInfo(String path) {
		String line = null;
		
		try {
            // FileReader reads text files in the default encoding.
            FileReader fileReader = new FileReader(path);
            BufferedReader bufferedReader = new BufferedReader(fileReader);
            
            name = bufferedReader.readLine();
            gender = bufferedReader.readLine();
            age = Integer.parseInt(bufferedReader.readLine());
            maxHealth = Integer.parseInt(bufferedReader.readLine());
            health = maxHealth;
            attack = Integer.parseInt(bufferedReader.readLine());
            mana = Integer.parseInt(bufferedReader.readLine());
            
            System.out.println(name);
            System.out.println(health);

            // Always close files.
            bufferedReader.close();         
        }
        catch(FileNotFoundException ex) {
            System.out.println(
                "Unable to open file '" + 
                path + "'");                
        }
        catch(IOException ex) {
            System.out.println(
                "Error reading file '" 
                + path + "'");                  
        }
	}

	@Override
	public void tick() {
		if(game.getKeyManager().up){ pMoveUp();}
		if(game.getKeyManager().down){ pMoveDown();}
		if(game.getKeyManager().left){ pMoveLeft();}
		if(game.getKeyManager().right){ pMoveRight();}
		
	}

	private void pMoveRight() {
		if(game.map[(int) y][(int) (x+0.5)] != '#'){
			x = x + 0.5;	
		}
	}

	private void pMoveLeft() {
		if(game.map[(int) y][(int) (x-0.5)] != '#'){
			x = x - 0.5;	
		}
	}

	private void pMoveDown() {
		if(game.map[(int) (y+0.3)][(int) (x)] != '#'){
			y = y + 0.3;	
		}
	}

	private void pMoveUp() {
		if(game.map[(int) (y-0.3)][(int) (x)] != '#'){
			y = y - 0.3;	
		}
	}


}
